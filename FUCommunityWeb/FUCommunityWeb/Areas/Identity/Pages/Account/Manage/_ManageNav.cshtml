@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="list-group">
    <li class="list-group-item">
        <i class="fa fa-user"></i>
        <a style="text-decoration: none; color: inherit;" class="@ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a>
    </li>
    <li class="list-group-item">
        <i class="fa fa-envelope"></i>
        <a style="text-decoration: none; color: inherit;" class="@ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a>
    </li>
    <li class="list-group-item">
        <i class="fa fa-lock"></i>
        <a style="text-decoration: none; color: inherit;" class="@ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a>
    </li>
    @if (hasExternalLogins)
    {
        <li class="list-group-item">
            <i class="fa fa-sign-in-alt"></i>
            <a style="text-decoration: none; color: inherit;" class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)" id="external-login" asp-page="./ExternalLogins">External logins</a>
        </li>
    }
    <li class="list-group-item">
        <i class="fa fa-shield-alt"></i>
        <a style="text-decoration: none; color: inherit;" class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a>
    </li>
    <li class="list-group-item">
        <i class="fa fa-address-card"></i>
        <a style="text-decoration: none; color: inherit;" class="@ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a>
    </li>
</ul>

